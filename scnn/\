from itertools import islice
import numpy as np
import sys
import pdb
import os
import json
from subtitle import Subtitle


def read_next_lines(f, n):
    # read n lines from subtitle and pre-process
    while True:        
        next_n_lines = list(islice(f, n))
        if not next_n_lines:
            return False
        if next_n_lines[1] != 'bg\n':
            break
    next_n_lines[0] = int(next_n_lines[0].split(' ')[1])
    next_n_lines[1] = next_n_lines[1].strip()
    next_n_lines[2] = int(next_n_lines[2].split(' ')[1])
    if (next_n_lines[1] == 'fkwg') or (next_n_lines[1] == 'fkwog'):
        next_n_lines[1] = 'fk'
    return next_n_lines

def load_subtitle(path, aqt_file):
    subtitles = []
    with open('%s/%s.aqt' % (path, aqt_file), 'r') as f:
        while True:
            lines = read_next_lines(f, 4)
            if lines:
                sub = Subtitle(lines[1], lines[0], lines[2])
                subtitles.append(sub)
            else:
                break
    return subtitles

def generate_data(path, anno_type):
    subtitles = [x for x in os.listdir(path) if x.endswith('aqt')]
    for aqt_file in subtitles:
        subtitle = load_subtitle(path, aqt_file)
        

if __name__ == '__main__':
  if len(sys.argv) < 3:
    print "gen_list <fb/bb> <val/test>"
    sys.exit(1)
  PATH = {'val' : "/media/data/mtriet/raw_video/%s_val/" % sys.argv[1],
        'test' : "/media/data/mtriet/raw_video/%s_test/" % sys.argv[1]}
  with open('../%s_classes.json' % sys.argv[1], 'r') as f:
    classes = json.load(f)

  generate_data(PATH[sys.argv[2]], sys.argv[1])
